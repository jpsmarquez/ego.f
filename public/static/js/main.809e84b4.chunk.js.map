{"version":3,"sources":["config/firebaseconfig.js","views/Login.js","views/HomeAdmin.js","views/Employees.js","views/Employee.js","views/Inversions.js","views/Inversion.js","views/Profile.js","views/FPass.js","containers/formasdecampo.js","views/createInversion.js","views/register.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Login","useState","email","setEmail","password","setPassword","error","setError","style","flexDirection","display","justifyContent","alignItems","height","className","textAlign","fontSize","color","flex","Item","labelCol","span","wrapperCol","placeholder","onChange","e","target","value","size","type","shape","onClick","signInWithEmailAndPassword","catch","errorMessage","message","console","log","backgroundColor","to","HomeAdmin","props","width","logout","Employees","ref","UsuarioCreado","setUsuarioCreado","createUserWithEmailAndPassword","then","Employee","Inversions","variable","setVariable","arrayofdb","setArrayofdb","searched","setSearched","useEffect","once","snapshot","forEach","childSnapshot","key","childData","val","titulo","tipo","desc","descrip","campos","id","arraydbaux","push","toLowerCase","autoComplete","map","item","index","splice","window","location","reload","autoSize","true","pathname","withRouter","match","params","ndesc","setnD","ntitulo","setnT","cancelD","title","onConfirm","set","success","onCancel","okText","cancelText","TextArea","updateinput","remove","history","user","currentUser","newemail","newpassword","confirmedP","setConfirmP","credential","EmailAuthProvider","borderColor","borderWidth","reauthenticateWithCredential","updateEmail","updatePassword","delete","ResetPassword","sendPasswordResetEmail","FormasDeCampo","llenarcampos","Input","marginVertical","rows","NewInversion","setD","setType","setT","setC","rstring","c","length","formularios","App","logged","setlogged","signOut","onAuthStateChanged","exact","path","render","component","FPass","Register","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.809e84b4.chunk.js","sourcesContent":["import * as firebase from 'firebase';\nimport \"firebase/auth\";\n\nconst Aplicacion =  {\n    apiKey: \"AIzaSyCsrJwOTh9EsWqCiyvXtuUoelsBsohcAIU\",\n    authDomain: \"egdeomx.firebaseapp.com\",\n    databaseURL: \"https://egdeomx.firebaseio.com\",\n    projectId: \"egdeomx\",\n    storageBucket: \"egdeomx.appspot.com\",\n    messagingSenderId: \"1012924663671\",\n    appId: \"1:1012924663671:web:3592cc97e4dd67cdec0372\",\n    measurementId: \"G-QL4JJ74DJY\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(Aplicacion);\n  firebase.analytics();\n\nexport {Aplicacion};\n","import React,{useEffect,useState} from \"react\";\nimport {Link,Redirect} from \"react-router-dom\";\nimport * as firebase from 'firebase';\nimport {Aplicacion} from '../config/firebaseconfig';\nimport { Button , Form, Input, Card} from 'antd';\n\n\n\nexport default function Login() {\n  const [email, setEmail]=useState('');\n  const [password, setPassword]=useState('');\n  const [error, setError]=useState(false);\n\n    const submit =()=>{\n      firebase.auth().signInWithEmailAndPassword(email, password).catch(function(error) {\n       var errorMessage = error.message;\n       setError(errorMessage)\n       console.log(errorMessage)\n       console.log(email)\n    });\n   \n  };\n  return (\n    <div style={{flexDirection:'column',display:'flex',justifyContent:'center', alignItems:'center', height: '-webkit-fill-available'}}>\n           \n            <label className=\"titles\" style={{textAlign:'center', fontSize:150 , color: 'grey' } }>GRUPO EGO</label>\n            <br/>\n            <Form style={{textAlign:'center',flex:'auto'}} >\n              <Form.Item\n                labelCol={{ span: 24 }}\n                wrapperCol={{ span: 24 }}>\n                \n                <Input\n                placeholder={\"correo\"}\n                style={{textAlign:'center'}}\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                  size={\"default\"}\n                />\n\n              </Form.Item>\n              <Form.Item\n                labelCol={{ span: 24 }}\n                wrapperCol={{ span: 24 }}>\n\n                <Input type=\"password\"\n                placeholder={\"contraseña\"}\n                style={{textAlign:'center'}}\n                  onChange={(e) => setPassword(e.target.value)}\n                  value={password}\n                  size={\"default\"}\n                  \n                />\n              </Form.Item>\n              <Button type=\"primary\" shape=\"round\"onClick={submit} style={{backgroundColor:'grey'}} >\n                ENTRAR\n              </Button>\n              <br/>\n              <br/>\n              <Link  to=\"/FPass\">\n              <Button type=\"primary\" shape=\"round\" style={{backgroundColor:'grey'}}>\n               ¿OLVIDASTE LA CONTRASEÑA?\n              </Button>\n              </Link>\n              <br/>\n              <br/>\n              <Link  to=\"/Register\">\n              <Button type=\"primary\" shape=\"round\" style={{backgroundColor:'grey'}}>\n               REGISTRO\n              </Button>\n              </Link>\n\n              {\n             error !== false ? <h1>{error}</h1> : null\n              }\n\n              </Form>\n\n    </div>\n\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Row, Col, Card } from 'antd';\nimport '../App.css';\n\nexport default function HomeAdmin(props) {\n      return (\n            <div\n                  style={{\n                        display: 'flex',\n                        textAlign: 'center',\n                        justifyContent: 'center'\n                  }}>\n                  <Row>\n                        <Col span={30}>\n                              <br />\n                              <br />\n                              <br />\n                                    <Link to=\"/Employees\">\n                                          <Button className=\"buttonss\" type=\"primary\" shape=\"round\" style={{ width: 500, height:100, backgroundColor: 'gray' ,fontSize:50}}  >\n                                                CREAR EMPLEADO\n                                          </Button>\n                                    </Link>\n                    \n                              <br />\n                              <br />\n                              <br />\n            \n                                    <Link to=\"/NewInversion\">\n                                          <Button className=\"buttonss\" type=\"primary\" shape=\"round\" style={{ width: 500, height:100,backgroundColor: 'gray' ,fontSize:50}}>\n                                                NUEVA INVERSION\n                                            </Button>\n                                    </Link>\n\n                                    <br />\n\n                              <br />\n                              <br />\n       \n                                    <Link to=\"/Inversions\">\n                                          <Button className=\"buttonss\" type=\"primary\" shape=\"round\" style={{ width: 500, height:100,backgroundColor: 'gray',fontSize:50 }} >\n                                                INVERSIONES\n                                            </Button>\n                                    </Link>\n                                    <br />\n                              <br />\n                              <br />\n                 \n                                    <Link to=\"/Profile\">\n                                          <Button className=\"buttonss\" type=\"primary\" shape=\"round\" style={{ width: 500, height:100,backgroundColor: 'gray' ,fontSize:50}} >\n                                                PERFIL\n                                          </Button>\n\n                                    </Link>\n                                    <br />\n                              <br />\n                              <br />\n \n                                    <Button className=\"buttonss\" onClick={props.logout} size='100px' type=\"primary\" shape=\"round\" style={{ width: 500, height:100,backgroundColor: 'gray',fontSize:50 }}>\n                                          SALIR\n                                     </Button>\n                      \n\n                        </Col>\n                  </Row>\n            </div>\n      );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button , Form, Input,Card,Row,Col}from 'antd';\nimport * as firebase from \"firebase/app\";\n\n\nexport default function Employees(props) {\n\n\n  var ref = firebase.database().ref(\"/usuario\");\n  const [email, setEmail]=useState('');\n  const [password, setPassword]=useState('');\n  const [tipo,setType] = useState('');\n  const [nombre,setN] = useState('');\n  const [error, setError]=useState('');\n  const [UsuarioCreado,setUsuarioCreado]=useState('');\n\n\n\n  const submit =()=>{\n    \n\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n      // Update successful.\n      console.log('success')\n\n      setUsuarioCreado(\"USUARIO CREADO\")\n      \n      \n       }, (error) => {\n        var errorMessage = error.message;\n        setError(errorMessage);\n      // An error happened.\n      console.log(error)\n      }).catch(function(error) {\n \n      \n     })  \n  };\n\n  return (\n\n    <div style={{\n      display: 'flex',\n      justifyContent: 'center',\n      textAlign: 'center' \n    }}>\n      \n      <Row>\n        <Col span={24}>\n          <label className=\"titles\" style={{ textAlign: 'center', fontSize: 100, color: 'grey' ,textAlign: 'center'  }}>NUEVO EMPLEADO</label>\n        </Col>\n        <Form style={{textAlign:'center',flex:'auto',justifyContent: 'center'}} >\n              <Form.Item\n                labelCol={{ span: 24 }}\n                wrapperCol={{ span: 24 }}>\n\n                <Input type={'email'}\n                placeholder={\"correo\"}\n                style={{textAlign:'center'}}\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                  size={\"default\"}\n                />\n              </Form.Item>\n\n              <Form.Item\n                labelCol={{ span: 24 }}\n                wrapperCol={{ span: 24 }}>\n                <Input \n                placeholder={\"contraseña\"}\n                style={{textAlign:'center'}}\n                  onChange={(e) => setPassword(e.target.value)}\n                  value={password}\n                  size={\"default\"} />\n              </Form.Item>\n\n\n              <Button type=\"primary\" shape=\"round\" onClick={submit} style={{backgroundColor:'grey'}} >\n                REGISTRAR\n              </Button>\n              \n              {\n              UsuarioCreado ? <h1>{UsuarioCreado} </h1> : <h1>{error} </h1>\n              }\n              \n              \n              <Link  to=\"/Home\">\n             <Button type=\"primary\" shape=\"round\" style={{backgroundColor:'grey'}} >\n              INICIO\n             </Button>\n              </Link>\n         </Form>\n\n      </Row>\n    </div>\n      );\n    };\n","import React, {useEffect,useState}  from \"react\";\nimport {Button, Radio,Col} from 'antd';\nimport {Link} from \"react-router-dom\";\nimport * as firebase from \"firebase/app\";\n\nexport default function Employee(props) {\n    return (\n      <div style={{display:'flex', \n      justifyContent: 'space-around'}}>\n       <Link  to=\"/Home\">\n        <Button type=\"primary\" shape=\"rectangle\" style={{backgroundColor:'grey'}}  >\n              HOME\n        </Button>\n        </Link>\n        \n\n        </div>   \n    );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Button, Col, Card, Row, Input, message, Form } from 'antd';\nimport * as firebase from \"firebase/app\";\n\nexport default function Inversions(props) {\n\n  let ref = firebase.database().ref(\"/inversion\");\n  const [variable, setVariable] = useState(false)\n  const [arrayofdb, setArrayofdb] = useState([])\n  let [searched, setSearched] = useState('');\n  const [st, setSt] = useState('');\n\n  console.log(searched)\n\n  useEffect(() => {\n    if (!variable) {\n\n      ref.once(\"value\", (snapshot) => {\n\n        console.log(snapshot)\n\n        snapshot.forEach((childSnapshot) => {\n\n          console.log(childSnapshot.key)\n\n          const childData = childSnapshot.val();\n\n          console.log(childData)\n          const titulo = childData.titulo;\n          const tipo = childData.tipo;\n          const desc = childData.descrip;\n          const campos = childData.campos;\n          const id = childSnapshot.key\n\n          if (campos) {\n            const arraydbaux = arrayofdb;\n            arraydbaux.push({\n              titulo: titulo,\n              tipo: tipo,\n              desc: desc,\n              campos: campos,\n              id: id\n            })\n            setArrayofdb(arraydbaux)\n          }\n        });\n        setVariable(true)\n\n      });\n    }\n  }, [])\n\n  const ssearched = () => {\n    arrayofdb.map((item, index) => {\n      if (searched === item.titulo.toLowerCase() && searched !== -1) {\n        console.log(item.titulo)\n        console.log(item.desc)\n        console.log(item.campos)\n        console.log(item)\n\n        const arraydbaux = arrayofdb;\n        arraydbaux.splice({})\n\n        arraydbaux.push({\n          titulo: item.titulo,\n          desc: item.desc,\n          campos: item.campos,\n        })\n        setArrayofdb(arraydbaux)\n      } \n    })\n\n\n    setSearched('')\n  };\n\n\n  function refreshPage() {\n    window.location.reload(false);\n  }\n\n  console.log(arrayofdb)\n\n  return (\n    <div style={{\n    \n      textAlign: 'center' ,\n      justifyContent: 'center'\n    }}>\n      <Row>\n        <Col span={24}>\n          <label className=\"titles\" style={{ textAlign: 'center', fontSize: 100, color: 'grey' }}>INVERSIONES</label>\n        </Col>\n        <Col span={24}>\n          <Link to=\"/Home\">\n            <Button type=\"primary\" shape=\"round\" style={{ backgroundColor: 'grey' }} >\n              INICIO\n              </Button>\n          </Link>\n        </Col>\n        <br />\n        <br />\n        <Col span={24}>\n          <Link to=\"/NewInversion\">\n            <Button type=\"primary\" shape=\"round\" style={{ backgroundColor: 'grey' }} >\n              NUEVA INVERSION</Button>\n          </Link>\n        </Col>\n        <Col span={24}>\n          <br />\n          <Input\n            id=\"Buscar\"\n            style={{ textAlign: 'center' }}\n            placeholder=\"busca inversión por título\"\n            onChange={(e) => setSearched(e.target.value.toLowerCase())}\n            value={searched}\n            autoComplete={\"off\"}\n          />\n          <br />\n          <br />\n          <Button onClick={ssearched} type=\"primary\" shape=\"round\" style={{ backgroundColor: 'grey' }} >\n            BUSCAR\n          </Button>\n          <br />\n          <br />\n          <Col span={24}>\n            <Button onClick={refreshPage} type=\"primary\" shape=\"round\" style={{ backgroundColor: 'grey' }} >\n              NUEVA BUSQUEDA\n            </Button>\n          </Col>\n          <br />\n\n        </Col>\n        \n        {\n          arrayofdb.map((item, index) => {\n            return (\n              <Row   >\n              <Col   >\n              <Card  shape=\"round\" className=\"invscampos\" autoSize true style={{ width: 360, alignItems:'center', }} key={index} >\n                {item.titulo}\n                <br />\n                {item.desc}\n                <br />\n                <Link to={{ pathname: `/Inversion/${item.id}` }}>\n                <br />\n                <Button type=\"primary\" size='small' shape=\"round\" style={{ backgroundColor: 'gray', textAlign: 'center' }} >\n                    INSPECCIONAR\n                </Button>\n                </Link>\n              </Card>\n              </Col>\n              </Row>\n            )\n          })\n        }\n\n      </Row>\n    </div>\n  );\n};\n\n","import React, { useState, useEffect } from \"react\";\nimport { Link, withRouter} from \"react-router-dom\";\nimport { Button, Col, Card, Row, Popconfirm, message,Input } from 'antd';\nimport * as firebase from \"firebase/app\";\n\nexport default withRouter( function Inversion(props) {\n\n  console.log(props)\n  var ref = firebase.database().ref(`/inversion/${props.match.params.id}`);\n  console.log(ref)\n\n  const [arrayofdb, setArrayofdb] = useState({})\n  const [index, setIndex] = useState(0);\n  const [campos, setC] = useState('');\n  const [ndesc, setnD] = useState('');\n  const [ntitulo, setnT] = useState('');\n\n\n  useEffect(() => {\n    ref.once(\"value\", (snapshot) => {\n      console.log(snapshot.val())\n      const childData = snapshot.val();\n      setArrayofdb(childData)\n      console.log(childData)\n    });\n}, []);\n\n  const deleteI =()=> {\n    ref.remove();\n    message.success('INVERSION ELIMINADA');\n    props.history.push('/Inversions')\n  };\n\n  function cancelD(e) {\n    console.log(e);\n    message.error('NO SE EFECTUO CAMBIOS');\n  }\n\n  const updateT =()=> {\n    firebase.database().ref(`/inversion/${props.match.params.id}/titulo`).set(ntitulo)\n    message.success('TITULO MODIFICADO');\n  };\n\n  function cancelT(e) {\n    console.log(e);\n    message.error('NO SE EFECTUO CAMBIOS');\n  }\n\n\n  const [formularios, setFormularios] = useState([]);\n\n\n  const deletelastelement = () => {\n    let f = [...formularios];\n    f.pop();\n    setFormularios(f)\n  };\n\n\n  const updateD = () => {\n    firebase.database().ref(`/inversion/${props.match.params.id}/descrip`).set(ndesc)\n    message.success('DESCRIPCION MODIFICADA');\n  };\n\n  function cancelD(e) {\n    console.log(e);\n    message.error('NO SE EFECTUO CAMBIOS');\n  }\n\n  const updateC = () => {\n    firebase.database().ref(`/inversion/${props.match.params.id}/campos`).set(arrayofdb.campos)\n    message.success('CAMPO EDITADO');\n  };\n\n  function cancelc() {\n    message.error('NO SE EFECTUO CAMBIOS');\n  }\n\n  function updateinput(e){\n    setArrayofdb(\n      {...arrayofdb,\n         campos: e.target.value\n      })\n  }\n\n  return (\n\n    <div style={{\n\n      display: 'flex',\n      textAlign: 'center' ,\n      justifyContent: 'center',\n      \n    }}>\n      <Row >\n        <Col span={24}>\n          <label className=\"titles\" style={{ textAlign: 'center', fontSize: 100, color: 'grey' }}>INVERSION</label>\n\n        <br />\n\n        <Link to=\"/Home\">\n          <Button type=\"primary\" size={\"small\"}  shape=\"round\" style={{ backgroundColor: 'grey' }} >\n            INICIO\n        </Button>\n        </Link>\n        \n        <br />\n        <br />\n\n        <Link to=\"/Inversions\">\n          <Button type=\"primary\" size={\"small\"}  shape=\"round\" style={{ backgroundColor: 'grey' }} >\n            INVERSIONES\n        </Button>\n        </Link>\n        <br />\n        <br />\n          <Input\n                  placeholder={`${arrayofdb.titulo} `}\n                  style={{ textAlign: 'center' }}\n                  onChange={(e) => setnT(e.target.value)}\n                  value={ntitulo}\n                  size={\"default\"}\n          />\n          <br />\n          <br />\n          <Popconfirm\n            title=\"¿ESTAS SEGURO?\"\n            onConfirm={updateT}\n            onCancel={cancelT}\n            okText=\"SI\"\n            cancelText=\"NO\">\n             <Button type=\"primary\" shape=\"round\" size={\"small\"} style={{ backgroundColor: 'grey' }} >EDITAR TITULO</Button>\n          </Popconfirm>\n\n          <br />\n          <br />\n          <Input\n                  placeholder={`${arrayofdb.descrip} `}\n                  style={{ textAlign: 'center' }}\n                  onChange={(e) => setnD(e.target.value)}\n                  value={ndesc}\n                  size={\"default\"}\n          />\n          <br />\n          <br />\n          <Popconfirm\n            title=\"¿ESTAS SEGURO?\"\n            onConfirm={updateD}\n            onCancel={cancelD}\n            okText=\"SI\"\n            cancelText=\"NO\">\n             <Button type=\"primary\" shape=\"round\" size={\"small\"} style={{ backgroundColor: 'grey' }} >EDITAR DESCRIPCION</Button>\n          </Popconfirm>\n          <br/>\n          <br/>\n          <Input.TextArea\n                  style={{textAlign: 'center' }}\n                  value={`${arrayofdb.campos}`}\n                  onChange={(e) => updateinput(e)}\n                  autoSize true \n          />\n          <br/>\n          <br/>\n          <Popconfirm\n            title=\"¿ESTAS SEGURO?\"\n            onConfirm={updateC}\n            onCancel={cancelc}\n            okText=\"SI\"\n            cancelText=\"NO\">\n            <Button type=\"primary\" shape=\"round\" size={\"small\"}  style={{ backgroundColor: 'grey' }}>EDITAR CAMPO </Button>\n          </Popconfirm>\n\n          <br/>\n          <br/>\n          <Popconfirm\n            title=\"¿ESTAS SEGURO?\"\n            onConfirm={deleteI}\n            onCancel={cancelD}\n            okText=\"SI\"\n            cancelText=\"NO\">\n            <Button type=\"primary\" shape=\"round\" size={\"small\"} style={{ backgroundColor: 'grey' }} >BORRAR INVERSION</Button>\n          </Popconfirm>\n          <br/>\n          <br/>\n        </Col>\n      </Row>\n    </div>\n  );\n});\n\n/*\n  const submit = (campo2e) => {\n    firebase.database().ref(`/inversion/${props.match.params.id}/campos`).update({\n     campos:campos\n   })\n  };\n\n\n            {\n              formularios.map((item) => {\n\n                return item;\n\n              })\n          }\n          <br/>\n          <Button type=\"primary\" size={\"small\"} onClick={submit} style={{ backgroundColor: 'grey' }}>\n              GUARDAR CAMPO/CAMPOS\n          </Button>\n          <br/>\n\n\n                    {\n            arrayofdb.campos ? (\n              arrayofdb.campos.map((item, index) => {\n              \n                return(\n                  <Input\n                  placeholder={`EDITAR CAMPO ${item}`}\n                  style={{ textAlign: 'center' }}\n                  onChange={(e) => setnD(e.target.value)}\n                  value={campo2e}\n                  size={\"default\"}\n                  />\n                )\n\n              }))\n              : null\n          }\n\n\n  const llenarcampos = (rstring) => {\n    console.log(rstring)\n\n    let c = [...campos]\n    console.log([campos])\n    let n = campos.length\n\n    c[n] = rstring\n    console.log(c)\n    setC(c)\n\n  }\n\n\n    const addform = () => {\n    let f = [...formularios];\n    f.push(<Formasdecampo setC={setC} campos={campos} llenarcampos={llenarcampos} value={campos[index]} />);\n    setFormularios(f)\n  };\n\n\n      firebase.database().ref(`/inversion/${props.match.params.id}/campos`).update({\n     campos\n   })\n\n\n\n            \n\n          {\n            arrayofdb.campos ? (\n              arrayofdb.campos.map((item, index) => {\n              \n                return(\n                  <p>{\n                    item\n                  }</p>\n                )\n\n              }))\n              : null\n          }\n*/","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Carousel, Radio, Col, Card, Row, Input, Form, Popconfirm, message } from 'antd';\nimport * as firebase from \"firebase/app\";\n\n\nexport default function Employees(props) {\n\n  let user = firebase.auth().currentUser\n  let [newemail, setEmail] = useState('');\n  let [newpassword, setPassword] = useState('');\n  let [confirmedP,setConfirmP]= useState('');\n  const [error, setError]=useState(false);\n\n  \n  \n  let credential = firebase.auth.EmailAuthProvider.credential(\n    user.email,\n    confirmedP\n  );\n\n\n  // Prompt the user to re-provide their sign-in credentials\n\nconst submitemail = () => {\n\n\n      console.log(newemail)\n      console.log(user.email)\n      console.log(user.password)\n\n      user.reauthenticateWithCredential(credential).then(function () {\n        // User re-authenticated.\n        user.updateEmail(newemail).then(() => {\n          // Update successful.\n          console.log('success')\n          message.success('CORREO CAMBIADO');\n        }, (error) => {\n          // An error happened.\n          console.log(error)\n          var errorMessage = error.message;\n          setError(errorMessage)\n        });\n      }).catch(function (error) {\n        // An error happened.\n        var errorMessage = error.message;\n        setError(errorMessage)\n      });\n    };\n  \n\n  function cancelE(e) {\n    console.log(e);\n    message.error('NO SE EFECTUO CAMBIOS');\n  }\n\n  const submitpassword = () => {\n\n      user.reauthenticateWithCredential(credential).then(function () {\n        // User re-authenticated.\n        user.updatePassword(newpassword).then(() => {\n          // Update successful.\n          console.log('success')\n          message.success('CONTRASEÑA CAMBIADA');\n        }, (error) => {\n          // An error happened.\n          console.log(error)\n          var errorMessage = error.message;\n          setError(errorMessage)\n        });\n      }).catch(function (error) {\n        // An error happened.\n        var errorMessage = error.message;\n        setError(errorMessage)\n      });\n\n\n  };\n\n  const deleteacc = () => {\n    user.reauthenticateWithCredential(credential).then(function () {\n      // User re-authenticated.\n      user.delete().then(function() {\n        // User deleted.\n      }).catch(function(error) {\n        // An error happened.\n        var errorMessage = error.message;\n        setError(errorMessage)\n      });\n    }).catch(function (error) {\n      // An error happened.\n      var errorMessage = error.message;\n      setError(errorMessage)\n    });\n\n    \n  };\n   \n\n\n  function cancelP(e) {\n    console.log(e);\n    message.error('NO SE EFECTUO CAMBIOS');\n  }\n\n  function cancelA(e) {\n    console.log(e);\n    message.error('NO SE EFECTUO CAMBIOS');\n  }\n\n\n  return (\n\n    <div style={{\n      display: 'flex',\n      textAlign: 'center' ,\n      justifyContent: 'center'\n    }}>\n      <Row>\n        <Col span={24}>\n          <label style={{ textAlign: 'center', fontSize: 100, color: 'gray' }}>PERFIL</label>\n        <br />\n        <Link to=\"/Home\">\n          <Button type=\"primary\" shape=\"round\" style={{ backgroundColor: 'gray',textAlign: 'center'  }} >INICIO</Button>\n        </Link>\n       \n        <br />\n        <br />\n      \n        <Card type=\"flex\" style={{ width: 300,textAlign: 'center', alignItems:'center', borderColor:'lightslategray', borderWidth:5, }}>\n        <p>INGRESA TU CONTRASEÑA ACTUAL ANTES DE EFECTUAR ALGUN CAMBIO</p>\n        <Input\n        placeholder={\"contraseña actual\"}\n        onChange={(e) => setConfirmP(e.target.value)}\n        size={\"default\"}\n        style={{ textAlign: 'center' }}/>\n        <br />\n\n          <Form.Item\n            labelCol={{ span: 24 }}\n            wrapperCol={{ span: 24 }}>\n\n            <Input\n              type=\"email\"\n              placeholder={\"correo\"}\n              style={{ textAlign: 'center' }}\n              onChange={(e) => setEmail(e.target.value)}\n              value={newemail}\n              size={\"default\"}\n            />\n\n          <Popconfirm\n            title=\"¿ESTAS SEGURO?\"\n            onConfirm={submitemail}\n            onCancel={cancelE}\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <br />\n            <br />\n           <Button  type=\"primary\" shape=\"round\" size={\"small\"} style={{ backgroundColor: 'grey' }} >CAMBIAR CORREO</Button>\n\n          </Popconfirm>\n          </Form.Item>\n\n          \n          <Form.Item\n            labelCol={{ span: 24 }}\n            wrapperCol={{ span: 24 }}>\n\n       <Input\n        placeholder={\"contraseña actual\"}\n        style={{ textAlign: 'center' }}\n        onChange={(e) => setConfirmP(e.target.value)}\n        size={\"default\"}\n        />\n\n          <Input\n           placeholder={\"nueva contraseña\"}\n           style={{ textAlign: 'center' }}\n           onChange={(e) => setPassword(e.target.value)}\n           value={newpassword}\n           size={\"default\"}\n           \n           />\n\n          <Popconfirm\n            title=\"¿ESTAS SEGURO?\"\n            onConfirm={submitpassword}\n            onCancel={cancelP}\n            okText=\"SI\"\n            cancelText=\"NO\">\n               <br />\n            <br />\n            <Button type=\"primary\" shape=\"round\" size={\"small\"} style={{ backgroundColor: 'grey' }} >CAMBIAR CONTRASEÑA</Button>\n          </Popconfirm>\n          </Form.Item>\n\n          <br />\n          <Input\n        placeholder={\"contraseña actual\"}\n        style={{ textAlign: 'center' }}\n        onChange={(e) => setConfirmP(e.target.value)}\n        size={\"default\"}\n        \n        \n        />\n          <Popconfirm\n            title=\"¿SEGURO QUE QUIERES BORRAR?\"\n            onConfirm={deleteacc}\n            onCancel={cancelA}\n            okText=\"SI\"\n            cancelText=\"NO\"\n          >\n             <br />\n            <br />\n            <Button type=\"primary\" shape=\"round\" size={\"small\"} style={{ backgroundColor: 'grey' }} >BORRAR CUENTA</Button>\n          </Popconfirm>\n          <br />\n\n          {\n             error !== false ? <h1>{error}</h1> : null\n          }\n\n        </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\n\n","import React,{useEffect,useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport * as firebase from 'firebase';\nimport {Aplicacion} from '../config/firebaseconfig';\nimport { Button , Form, Input, Card} from 'antd';\nimport { black } from \"ansi-colors\";\n\nexport default function ResetPassword() {\n  const [email, setEmail]=useState('');\n  //const [password, setPassword]=useState('');\n  const submit = ()=>{\n\n    console.log(email);\n    const auth = firebase.auth();\n    auth.sendPasswordResetEmail(email).then(()=> {\n    // Email sent.\n    }).catch((error) => {\n     // An error happened.\n});\n  };\n  return (\n    <div style={{flexDirection:'column',display:'flex',justifyContent:'center', alignItems:'center', height: '-webkit-fill-available'}}>\n            <label style={{textAlign:'center', fontSize:60 , color: 'white'} }>RECUPERA TU CONTRASEÑA </label>\n            <br/>\n            <Form style={{textAlign:'center'}} >\n              <Form.Item\n                labelCol={{ span: 24 }}\n                wrapperCol={{ span: 24 }}>\n                \n                <Input\n                placeholder={\"correo\"}\n                style={{textAlign:'center'}}\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                  size={\"large\"}\n                  type={'email'}\n                />\n              </Form.Item>\n              <Link to={'/Home'}>\n              <Button shape={\"round\"} type=\"primary\" onClick={submit} style={{backgroundColor:'grey'}}>\n                ENVIAR\n              </Button>\n              </Link>\n\n              <Link to={'/Home'}>\n              <Button shape={\"round\"} type=\"primary\"  style={{backgroundColor:'grey'}}>\n                LOG-IN\n              </Button>\n              </Link>\n\n            </Form>\n    </div>\n\n  );\n};\n\n\n\n","import React,{useState} from \"react\";\nimport { Form, Input,Col, Row, } from 'antd';\n\n\n\nexport default function FormasDeCampo({llenarcampos}) {\n    const { TextArea } = Input;\n    \n    return (\n       <Col span={6} style={{marginVertical:10}}>\n\n        <TextArea style={{height:'fit-content'}} \n        rows={4}\n        onChange={(e) => \n        llenarcampos(e.target.value)} \n        placeholder={\"CAMPO\"} \n        autoSize true\n        />\n        \n        </Col>\n    )\n}\n\n\n","\nimport React, { useState } from \"react\";\nimport { Button, Form, Input, Row, Col, Divider } from 'antd';\nimport Formasdecampo from '../containers/formasdecampo';\nimport { Link } from \"react-router-dom\";\nimport Column from \"antd/lib/table/Column\";\nimport * as firebase from 'firebase';\nimport { Aplicacion } from '../config/firebaseconfig';\n\nexport default function NewInversion(props) {\n\n  const [desc, setD] = useState('');\n  const [tipo, setType] = useState('');\n  const [titulo, setT] = useState('');\n\n  const [campos, setC] = useState('');\n\n  const [index, setIndex] = useState(0);\n\n  const llenarcampos = (rstring) => {\n    console.log(rstring)\n\n    let c = [...campos]\n    let n = campos.length\n    c[n] = rstring\n    setC(c)\n\n  }\n\n  const [formularios, setFormularios] = useState([<Formasdecampo llenarcampos={llenarcampos} value={campos} />]);\n\n  const submit = () => {\n    firebase.database().ref('inversion').push({\n      titulo: titulo,\n      tipo: tipo,\n      descrip: desc,\n      campos: campos\n\n\n    })\n  };\n\n  const addform = () => {\n    let f = [...formularios];\n\n    f.push(<Formasdecampo setC={setC} campos={campos} llenarcampos={llenarcampos} value={campos[index]} />);\n\n    setFormularios(f)\n  };\n\n\n  const deletelastelement = () => {\n    let f = [...formularios];\n\n    f.pop();\n\n    setFormularios(f)\n  };\n\n  return (\n    <Row>\n      <Col span={24}>\n        <label className=\"titles\" style={{ textAlign: 'center', fontSize: 100, color: 'grey'  }}>NUEVA INVERSION</label>\n      </Col>\n\n      <Col span={24}>\n        <Form style={{ textAlign: 'center' }} >\n          <Row>\n            <Col span={6} >\n              <Form.Item\n                labelCol={{ span: 24 }}\n                wrapperCol={{ span: 24 }}>\n\n                <Input\n                  placeholder={\"TITULO\"}\n                  style={{ textAlign: 'center' }}\n                  onChange={(e) => setT(e.target.value)}\n                  value={titulo}\n                  size={\"default\"} \n                  \n                />\n              </Form.Item>\n            </Col>\n\n            <Col span={6} >\n              <Form.Item\n                labelCol={{ span: 24 }}\n                wrapperCol={{ span: 24 }}>\n                <Input\n                  placeholder={\"TIPO\"}\n                  style={{ textAlign: 'center' }}\n\n\n                  onChange={(e) => setType(e.target.value)}\n\n                  value={tipo}\n                  size={\"default\"}\n                />\n              </Form.Item>\n            </Col>\n\n            <Col span={6} >\n              <Form.Item\n                labelCol={{ span: 24 }}\n                wrapperCol={{ span: 24 }}>\n                <Input\n                  placeholder={\"DESCRIPCION\"}\n                  style={{ textAlign: 'center' }}\n                  onChange={(e) => setD(e.target.value)}\n                  value={desc}\n                  size={\"default\"}\n                />\n              </Form.Item>\n            </Col>\n\n            {\n              formularios.map((item) => {\n\n                return item;\n              })\n            }\n\n          </Row>\n        </Form>\n      </Col>\n      <br />\n      <br />\n      <Col span={24}>\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-around'\n        }}>\n\n          <Link to=\"/Inversions\">\n            <Button type=\"primary\" shape=\"round\" onClick={submit} style={{ backgroundColor: 'grey' }}>\n              GUARDAR\n          </Button>\n          </Link>\n          <br />\n          <Link to=\"/Home\">\n            <Button type=\"primary\" shape=\"round\" style={{ backgroundColor: 'grey' }} >\n              INICIO\n             </Button>\n          </Link>\n        </div>\n\n      </Col>\n    </Row>\n\n  )\n}\n\n/*\n          <Button type=\"primary\" onClick={addform} style={{ backgroundColor: 'grey' }}>\n            +\n          </Button>\n\n          <Button type=\"primary\" onClick={deletelastelement} style={{ backgroundColor: 'grey' }}>\n            -\n          </Button>\n\n          <Button type=\"primary\" shape=\"round\" style={{ backgroundColor: 'grey' }} >\n              SUBIR IMAGEN\n          </Button>\n\n*/\n\n/*\nimport React,{useState} from \"react\";\nimport { Button , Form, Input, Row, Col, Divider} from 'antd';\nimport Formasdecampo from '../containers/formasdecampo';\nimport {Link} from \"react-router-dom\";\nimport Column from \"antd/lib/table/Column\";\nimport * as firebase from 'firebase';\nimport {Aplicacion} from '../config/firebaseconfig';\n\nexport default function NewInversion(props) {\n\n    const [desc,setD] = useState('');\n    const [tipo,setType] = useState('');\n    const [titulo,setT] = useState('');\n\n    const [campos,setC] = useState(['']);\n\n    const [index, setIndex] = useState(0);\n\n    const llenarcampos=(rstring)=>{\n      console.log(rstring)\n\n      let c = [...campos]\n      let n =campos.length\n      c[n]=rstring\n      setC(c)\n\n    }\n\n    const [formularios,setFormularios] = useState([<Formasdecampo llenarcampos={llenarcampos} value={campos} />]);\n\n    const submit= ()=>{\n      firebase.database().ref('inversion').push({\n        titulo:titulo,\n        tipo:tipo,\n        descrip:desc,\n        campos:campos\n\n\n      })\n     };\n\n    const addform= ()=>{\n        let f = [...formularios];\n\n        f.push(<Formasdecampo setC={setC} campos={campos} llenarcampos={llenarcampos} value={campos[index]}/>);\n\n        setFormularios(f)\n    };\n\n    return (\n        <Row>\n        <Col span={24}>\n        <label style={{textAlign:'center', fontSize:100 , color: 'white'} }>NUEVA INVERSION</label>\n        </Col>\n\n        <Col span={24}>\n        <Form style={{textAlign:'center'}} >\n        <Row>\n          <Col span={6} >\n          <Form.Item\n            labelCol={{ span: 24 }}\n            wrapperCol={{ span: 24 }}>\n\n            <Input\n            placeholder={\"TITULO\"}\n            style={{textAlign:'center'}}\n              onChange={(e) => setT(e.target.value)}\n              value={titulo}\n              size={\"default\"}\n            />\n          </Form.Item>\n          </Col>\n\n          <Col span={6} >\n          <Form.Item\n            labelCol={{ span: 24 }}\n            wrapperCol={{ span: 24 }}>\n            <Input\n            placeholder={\"TIPO\"}\n            style={{textAlign:'center'}}\n\n\n              onChange={(e) => setType(e.target.value)}\n\n              value={tipo}\n              size={\"default\"}\n            />\n          </Form.Item>\n          </Col>\n\n          <Col span={6} >\n          <Form.Item\n            labelCol={{ span: 24 }}\n            wrapperCol={{ span: 24 }}>\n            <Input\n            placeholder={\"DESCRIPCION\"}\n            style={{textAlign:'center'}}\n              onChange={(e) => setD(e.target.value)}\n              value={desc}\n              size={\"default\"}\n            />\n          </Form.Item>\n          </Col>\n\n          {\n            formularios.map((item)=>{\n\n                return item;\n            })\n          }\n\n        </Row>\n        </Form>\n        </Col>\n\n        <Col span={24}>\n\n        <div style={{display:'flex',\n        justifyContent: 'space-around'}}>\n        <Button type=\"primary\" onClick={addform} style={{backgroundColor:'grey'}}>\n            +\n          </Button>\n\n        <Link  to=\"/Inversions\">\n        <Button type=\"primary\" onClick={submit} style={{backgroundColor:'grey'}}>\n            GUARDAR\n          </Button>\n        </Link>\n\n        <Link  to=\"/Home\">\n        <Button type=\"primary\" shape=\"round\" style={{backgroundColor:'grey'}} >\n              INICIO\n        </Button>\n        </Link>\n        </div>\n\n        </Col>\n        </Row>\n\n    )\n}\n*/","import React,{useEffect,useState} from \"react\";\nimport {Link,Redirect} from \"react-router-dom\";\nimport * as firebase from 'firebase';\nimport {Aplicacion} from '../config/firebaseconfig';\nimport { Button , Form, Input, Card} from 'antd';\n\n\nexport default function Login() {\n  const [email, setEmail]=useState('');\n  const [password, setPassword]=useState('');\n  const [tipo,setType] = useState('');\n  const [nombre,setN] = useState('');\n  const [error, setError]=useState('');\n  const [UsuarioCreado,setUsuarioCreado]=useState('');\n\n\n\n  const submit =()=>{\n    \n\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n      // Update successful.\n      console.log('success')\n\n      setUsuarioCreado(\"USUARIO CREADO\")\n      console.log(UsuarioCreado)\n      \n       }, (error) => {\n        var errorMessage = error.message;\n        setError(errorMessage);\n      // An error happened.\n      console.log(error)\n      }).catch(function(error) {\n \n      \n     })\n//add to firebase db with  email and passwords requirements\n     \n    \n  };\n  return (\n    <div style={{flexDirection:'column',display:'flex',justifyContent:'center', alignItems:'center', height: '-webkit-fill-available'}}>\n            <label style={{textAlign:'center', fontSize:150 , color: 'white'} }>GRUPO EGO </label>\n            <br/>\n            <Form style={{textAlign:'center',flex:'auto'}} >\n              <Form.Item\n                labelCol={{ span: 24 }}\n                wrapperCol={{ span: 24 }}>\n\n                <Input type={'email'}\n                placeholder={\"correo\"}\n                style={{textAlign:'center'}}\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                  size={\"default\"}\n                />\n              </Form.Item>\n\n              <Form.Item\n                labelCol={{ span: 24 }}\n                wrapperCol={{ span: 24 }}>\n                <Input \n                placeholder={\"contraseña\"}\n                style={{textAlign:'center'}}\n                  onChange={(e) => setPassword(e.target.value)}\n                  value={password}\n                  size={\"default\"} />\n              </Form.Item>\n\n\n              <Button type=\"primary\" onClick={submit} style={{backgroundColor:'grey'}} >\n                REGISTRO\n              </Button>\n              \n              {\n              UsuarioCreado ? <h1>{UsuarioCreado} </h1> : <h1>{error} </h1>\n              }\n              \n              \n\n             \n              <Link  to=\"/Home\">\n             <Button type=\"primary\" shape=\"rectangle\" style={{backgroundColor:'grey'}} >\n              INICIO\n             </Button>\n              </Link>\n              </Form>\n\n    </div>\n\n  );\n};\n\n","import React,{useState, useEffect} from 'react';\nimport {BrowserRouter,Switch,Route,Redirect} from 'react-router-dom';\nimport * as firebase from \"firebase/app\";\nimport {Aplicacion} from \"./config/firebaseconfig\";\nimport Login from './views/Login';\nimport HomeA from './views/HomeAdmin';\nimport HomeE from './views/HomeE';\nimport Employees from './views/Employees';\nimport Employee from './views/Employee';\nimport Inversions from './views/Inversions';\nimport Inversion from './views/Inversion';\nimport InversionsEmp from './views/InversionsEmp';\nimport InversionEmployee from './views/InversionEmployee';\nimport Profile from './views/Profile';\nimport ProfileEmp from './views/ProfileEmp';\nimport FPass from './views/FPass';\nimport NewInversion from './views/createInversion';\nimport Register from './views/register';\n\n\n\nexport default function App() {\n  const [logged, setlogged]=useState(null)\n  \n\n  const logout=()=>{\n  firebase.auth().signOut()\n  setlogged(null)\n  };\n\n  useEffect(()=>{\n        firebase.auth().onAuthStateChanged(function(user) {\n          console.log(user)\n          if (user) {\n\n             \n            setlogged(true);\n            \n           \n          } else {\n            setlogged(null) \n          }\n        });\n      });\n\n    return (\n      <BrowserRouter> \n        <Switch>\n        <Route exact path=\"/\" render={(props)=>(logged?<Redirect to=\"/Home\" />:<Login {...props} /> )}/>\n      \n        <Route exact path=\"/Home\"render={(props)=>(logged?\n\n            <HomeA {...props}  logout={logout} />\n\n        :<Login {...props}/> )} />\n\n        <Route exact path=\"/Inversions\"render={(props)=>(logged?\n          \n            <Inversions {...props}  logout={logout} />\n            \n        :<Login {...props}/> )} />\n\n        <Route exact path=\"/Inversion/:id\"render={(props)=>(logged?\n          \n            <Inversion {...props}  logout={logout} />\n            \n        :<Login {...props}/> )} />\n\n        <Route exact path=\"/Profile\"render={(props)=>(logged?\n          \n            <Profile {...props}  logout={logout} />\n            \n        :<Login {...props}/> )} />\n\n        <Route exact path=\"/Employees\"render={(props)=>(logged?\n         \n            <Employees {...props}  logout={logout} />\n            \n        :<Login {...props}/> )} />\n\n        <Route exact path=\"/Employee\"render={(props)=>(logged?\n          \n            <Employee {...props}  logout={logout} />\n           \n        :<Login {...props}/> )} />\n\n        <Route exact path=\"/NewInversion\"render={(props)=>(logged?\n          \n            <NewInversion {...props}  logout={logout} />\n             \n        :<Login {...props}/> )} />\n\n        <Route exact path='/FPass' component={FPass}/>\n        <Route exact path='/Register' component={Register}/>\n\n\n        </Switch>\n      </BrowserRouter>\n    );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css' ;\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}